Natcho Patch | Faiza Huda, PreGuac, Huebert, Gabriel Thompson, Iggy, Jacob Ng, Truthful Thompson
APCS
L04- Never Fear, Big O is Here!
2022-01-07

DISCOS
 - The best and worst case for selection are the same, because no matter what, Java will make one swap for each pass.
 - 

QCC
 - When the array already sorted for bubble sort, why don't we stop the loop once there are zero swaps for a pass?
 - We expressed each of our time complexities in two parts: the time complexity of swaps, and the time complexity of
   comparisons. Is there a good way to combine these into one?
 - In our driver file, we also calculate an "average" case for each sorting algorithm. We ruled against including
   this in our findings because it wasn't listed in the lab guidelines. Would mentioning an "average" case be of value?
 - From experimentation, Java's Arrays.sort() method seems significantly faster than any of the algorithms we
   implemented. What sorting algorithm does Array.sort() use? Is it faster than O(n^2)?

BUB-QA
 q. If a pass requires no swaps, what do you know?
     a. The array is sorted.
 q. After pass p, what do you know?
     a. All values decreasing from index  p-1 (inclusive) are sorted.
 q. How many passes are necessary to completely sort?
     a. For an array of length n it needs n -1 passes. 

SEL-QA
 q. How many passes to sort n elements?
     a. n - 1 passes
 q. What do you know after pass p?
     a. After P passes the last P elements are permanent
 q. How do you know if sorted?
     a. after n passes where n is the length of the array
 q. What does a pass boil down to?
     a. Finding the largest item in the array before the last p items.

INS-QA
 q. How many passes to sort n elements?
     a. n - 1
 q. What do you know after pass p?
     a. All of indexes 0 to p elements are sorted
 q. How will you know when sorted?
     a. When you've finished n - 1 passes
 q. What constitues a pass?
     a. Going through every adjacent pair from 0 to p
 q. What must you track?
     a. You must track p, and the current index within a pass
